# Generated by Django 4.2.2 on 2023-07-28 21:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_documento', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('TI', 'Tarjeta de Identidad'), ('CE', 'Cédula de Extranjería')], default='CC', max_length=3, verbose_name='Tipo de Documento')),
                ('numero_documento', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Número de Documento')),
                ('primer_nombre', models.CharField(max_length=10, verbose_name='Primer Nombre')),
                ('segundo_nombre', models.CharField(max_length=10, verbose_name='Segundo Nombre')),
                ('primer_apellido', models.CharField(max_length=10, verbose_name='Primer Apellido')),
                ('segundo_apellido', models.CharField(max_length=10, verbose_name='Segundo Apellido')),
                ('telefono', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.'), django.core.validators.MaxLengthValidator(10)], verbose_name='Número Telefónico')),
                ('rol', models.CharField(choices=[('ADMI', 'Administrador'), ('VEN', 'Vendedor'), ('PROV', 'Proveedor'), ('CLIE', 'Cliente')], help_text='Roles:Administrador,Vendedor,Proveedor,Cliente', max_length=4)),
                ('correo_electronico', models.EmailField(max_length=50, verbose_name='Correo Electrónico')),
                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),
                ('groups', models.ManyToManyField(blank=True, related_query_name='usuarios', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuarios', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contabilidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('1', 'Ingreso'), ('0', 'Egreso')], default='1', max_length=1, verbose_name='Ingreso o Egreso')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=25, verbose_name='Valor')),
                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Pago')),
                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='Ips',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ips', models.CharField(max_length=20, verbose_name='Nombre')),
                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='Nomina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=25, verbose_name='Valor a Pagar')),
                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='Trabajador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ips', models.ForeignKey(help_text='Seleccione una IPS', on_delete=django.db.models.deletion.CASCADE, to='usuario.ips', verbose_name='Prestador de salud')),
                ('nomina', models.ForeignKey(help_text='Valor que se le paga al trabajador', on_delete=django.db.models.deletion.CASCADE, to='usuario.nomina', verbose_name='Valor a Pagar')),
                ('persona', models.ForeignKey(help_text='Recuerde que solo las personas con rol de vendedor se mostraran en los trabajadores', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Seleccione al Trabajador')),
            ],
        ),
        migrations.CreateModel(
            name='Aporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=25, verbose_name='Valor del Aporte')),
                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Persona')),
            ],
        ),
    ]
