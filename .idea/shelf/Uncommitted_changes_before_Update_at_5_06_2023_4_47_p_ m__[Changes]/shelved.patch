Index: base/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for base project.\r\n\r\nGenerated by 'django-admin startproject' using Django 4.1.7.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/4.1/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/4.1/ref/settings/\r\n\"\"\"\r\n\r\nfrom pathlib import Path\r\nimport os\r\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\r\nBASE_DIR = Path(__file__).resolve().parent.parent\r\n\r\nimport mimetypes\r\nmimetypes.add_type(\"text/css\", \".css\", True)\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = 'django-insecure-ac3ry3hntr5(lg86t5%%9wwxznr6+6fa1dj*=l5ee%r)!!k!%k'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = []\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    #Apps\r\n    'usuario',\r\n    'inventario',\r\n    'productos',\r\n    'compra',\r\n    'venta',\r\n    \r\n    #Librerias\r\n    'django_bootstrap5',#pip install django-bootstrap5\r\n    'crispy_forms', #pip install django-crispy-forms\r\n    'crispy_bootstrap5', #pip install crispy-bootstrap5\r\n    'django_bootstrap_icons',\r\n\r\n]\r\nCRISPY_ALLOWED_TEMPLATE_PACKS= \"bootstrap5\"\r\nCRISPY_TEMPLATE_PACK= \"bootstrap5\"\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'base.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': ['base/templates'],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'base.wsgi.application'\r\n\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': BASE_DIR / 'db.sqlite3',\r\n    }\r\n}\r\n\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'es'\r\n\r\nTIME_ZONE = 'America/Bogota'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\r\n\r\nSTATIC_URL = 'static/'\r\nSTATICFILES_DIRS= [\r\n    os.path.join(BASE_DIR,\"static\"),\r\n    ('node_modules',os.path.join(BASE_DIR, 'node_modules')),\r\n\r\n]\r\nSTATIC_ROOT =\"/static\"\r\n\r\n# Default primary key field type\r\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\r\n\r\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\r\n\r\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\r\nEMAIL_HOST = 'smtp.googlemail.com'\r\nEMAIL_PORT = 587\r\nEMAIL_HOST_USER = 'monguarte2@gmail.com'\r\nEMAIL_HOST_PASSWORD = 'llojmubhpfbgldsc'\r\nEMAIL_USE_TLS = True\r\n\r\nLOGIN_URL = 'inicio'\r\nLOGIN_REDIRECT_URL = 'index'
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/base/settings.py b/base/settings.py
--- a/base/settings.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/base/settings.py	(date 1686000983044)
@@ -9,7 +9,7 @@
 For the full list of settings and their values, see
 https://docs.djangoproject.com/en/4.1/ref/settings/
 """
-
+import os
 from pathlib import Path
 import os
 # Build paths inside the project like this: BASE_DIR / 'subdir'.
@@ -39,19 +39,19 @@
     'django.contrib.sessions',
     'django.contrib.messages',
     'django.contrib.staticfiles',
+    
     #Apps
     'usuario',
     'inventario',
     'productos',
     'compra',
     'venta',
-    
+
     #Librerias
     'django_bootstrap5',#pip install django-bootstrap5
     'crispy_forms', #pip install django-crispy-forms
     'crispy_bootstrap5', #pip install crispy-bootstrap5
     'django_bootstrap_icons',
-
 ]
 CRISPY_ALLOWED_TEMPLATE_PACKS= "bootstrap5"
 CRISPY_TEMPLATE_PACK= "bootstrap5"
@@ -136,7 +136,6 @@
 STATICFILES_DIRS= [
     os.path.join(BASE_DIR,"static"),
     ('node_modules',os.path.join(BASE_DIR, 'node_modules')),
-
 ]
 STATIC_ROOT ="/static"
 
Index: compra/migrations/0001_initial.py
===================================================================
diff --git a/compra/migrations/0001_initial.py b/compra/migrations/0001_initial.py
deleted file mode 100644
--- a/compra/migrations/0001_initial.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ /dev/null	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
@@ -1,38 +0,0 @@
-# Generated by Django 4.2 on 2023-06-01 21:33
-
-import django.core.validators
-from django.db import migrations, models
-import django.db.models.deletion
-
-
-class Migration(migrations.Migration):
-
-    initial = True
-
-    dependencies = [
-        ('inventario', '0001_initial'),
-        ('usuario', '0001_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Compra',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Compra')),
-                ('valor_total_compra', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MaxValueValidator(9999999999)], verbose_name='Valor total')),
-                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),
-                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuario.persona', verbose_name='Persona')),
-            ],
-        ),
-        migrations.CreateModel(
-            name='Detalle_Compra',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('precio_unidad', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MaxValueValidator(9999999999)], verbose_name='Valor total')),
-                ('cantidad', models.PositiveIntegerField(default=1, help_text='La cantidad tiene que ser menor a 100', validators=[django.core.validators.MaxValueValidator(100)])),
-                ('compra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compra.compra', verbose_name='Seleccione quien realizo la compra')),
-                ('materia_prima', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.materia_prima', verbose_name='Seleccione la Materia Prima')),
-            ],
-        ),
-    ]
Index: usuario/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\nfrom django.utils.translation import gettext_lazy as _\r\nfrom django.core.validators import integer_validator,MaxLengthValidator,ValidationError,RegexValidator\r\n#Módulo de usuarios\r\n# Create your models here.\r\n#Modelo Persona\r\n# def letras_uniquemente(value):\r\n#     if not value.isalpha():\r\n#         raise ValidationError(\"El campo solo permite letras.\")\r\nclass Persona(models.Model):\r\n    class TipoDocumento(models.TextChoices):\r\n        CC='CC ',_(\"Cédula de Ciudadanía\")\r\n        TI='TI',_(\"Tarjeta de Identidad\")\r\n        CE='CE',_(\"Cédula de Extranjería\")\r\n    tipo_documento=models.CharField(max_length=3,choices=TipoDocumento.choices,default=TipoDocumento.CC,verbose_name=\"Tipo de Documento\")\r\n    numero_documento=models.CharField(max_length=10,validators=[integer_validator],verbose_name=\"Número de Documento\", unique=True)\r\n    primer_nombre=models.CharField(max_length=10,verbose_name=\"Primer Nombre\")\r\n    segundo_nombre=models.CharField(max_length=10,verbose_name=\"Segundo Nombre\")\r\n    primer_apellido=models.CharField(max_length=10,verbose_name=\"Primer Apellido\")\r\n    segundo_apellido=models.CharField(max_length=10,verbose_name=\"Segundo Apellido\")\r\n    telefono=models.CharField(max_length=10,validators=[integer_validator,MaxLengthValidator(10)],verbose_name=\"Número Telefónico\")\r\n    class  Rol(models.TextChoices):\r\n        ADMINISTRADOR='ADMI',_(\"Administrador\")\r\n        VENDEDOR='VEN',_(\"Vendedor\")\r\n        PROVEEDOR='PROV',_(\"Proveedor\")\r\n        CLIENTE='CLIE',_(\"Cliente\")\r\n    rol=models.CharField(max_length=4,choices=Rol.choices,help_text=\"Roles:Administrador,Vendedor,Proveedor,Cliente\")\r\n    correo_electronico=models.EmailField(max_length=50,verbose_name=\"Correo Electrónico\")\r\n    class Estado(models.TextChoices):\r\n        ACTIVO='1',_(\"Activo\")\r\n        INACTICO='0',_(\"Inactivo\")\r\n    estado=models.CharField(max_length=1,choices=Estado.choices,default=Estado.ACTIVO,verbose_name=\"Estado\")\r\n\r\n    def __str__(self):\r\n        return\"%s %s %s %s\"%(self.numero_documento,self.primer_nombre,self.primer_apellido,self.rol)\r\n    class meta:\r\n        verbose_name_plural=\"Persona\"\r\n#Modelo de Contabilidad\r\nclass Contabilidad(models.Model):\r\n\r\n    class TipoI(models.TextChoices):\r\n        INGRESO='1',_(\"Ingreso\")\r\n        EGRESO='0',_(\"Egreso\")\r\n    tipo=models.CharField(max_length=1,choices=TipoI.choices,default=TipoI.INGRESO,verbose_name=\"Ingreso o Egreso\")\r\n    valor=models.DecimalField(max_digits=25, decimal_places=2, verbose_name=\"Valor\")#puede que se deje fijo en 8mil\r\n    fecha=models.DateTimeField(verbose_name=\"Fecha de Pago\",auto_now_add=True)\r\n    class Estado(models.TextChoices):\r\n        ACTIVO='1',_(\"Activo\")\r\n        INACTICO='0',_(\"Inactivo\")\r\n    estado=models.CharField(max_length=1,choices=Estado.choices,default=Estado.ACTIVO,verbose_name=\"Estado\")\r\n    def precio_formato_colombiano(self):\r\n        return '${:,.0f}'.format(self.valor).replace(',', '.')\r\n#Modelo Aporte\r\nclass Aporte(models.Model):\r\n    valor=models.DecimalField(max_digits=25, decimal_places=2, verbose_name=\"Valor del Aporte\")\r\n    fecha=models.DateTimeField(verbose_name=\"Fecha\",auto_now_add=True)\r\n    class Estado(models.TextChoices):\r\n        ACTIVO='1',_(\"Activo\")\r\n        INACTICO='0',_(\"Inactivo\")\r\n    estado=models.CharField(max_length=1,choices=Estado.choices,default=Estado.ACTIVO,verbose_name=\"Estado\")\r\n    persona=models.ForeignKey(Persona, verbose_name=_(\"Persona\"),on_delete=models.CASCADE)\r\n\r\n#modelo de IPS\r\nclass Ips(models.Model):\r\n\r\n    nombre_ips=models.CharField(max_length=20,verbose_name=\"Nombre\")\r\n    class Estado(models.TextChoices):\r\n        ACTIVO='1',_(\"Activo\")\r\n        INACTICO='0',_(\"Inactivo\")\r\n    estado=models.CharField(max_length=1,choices=Estado.choices,default=Estado.ACTIVO,verbose_name=\"Estado\")\r\n\r\n    def __str__(self):\r\n        return\"%s\"%(self.nombre_ips)\r\n    class meta:\r\n        verbose_name_plural=\"Prestador de salud\"\r\n#Modelo de Nómina\r\nclass Nomina(models.Model):\r\n\r\n    valor=models.DecimalField(max_digits=25, decimal_places=2, verbose_name=\"Valor a Pagar\")\r\n    fecha=models.DateTimeField(verbose_name=\"Fecha\",auto_now_add=True)\r\n    class Estado(models.TextChoices):\r\n        ACTIVO='1',_(\"Activo\")\r\n        INACTICO='0',_(\"Inactivo\")\r\n    estado=models.CharField(max_length=1,choices=Estado.choices,default=Estado.ACTIVO,verbose_name=\"Estado\")\r\n    def precio_formato_colombiano(self):\r\n        return '${:,.0f}'.format(self.valor).replace(',', '.')\r\n    def __str__(self):\r\n        return\"%s\"%(self.valor)\r\n    class meta:\r\n        verbose_name_plural=\"Nomina\"\r\n\r\nclass Trabajador(models.Model):\r\n\r\n    persona=models.ForeignKey(Persona, verbose_name=_(\"Seleccione al Trabajador\"),help_text=\"Recuerde que solo las personas con rol de vendedor se mostraran en los trabajadores\", on_delete=models.CASCADE)\r\n    nomina=models.ForeignKey(Nomina, verbose_name=_(\"Valor a Pagar\"),help_text=\"Valor que se le paga al trabajador\", on_delete=models.CASCADE)\r\n    ips=models.ForeignKey(Ips, verbose_name=_(\"Prestador de salud\"),help_text=\"Seleccione una IPS\", on_delete=models.CASCADE)\r\n    def formato_colombiano(self):\r\n        return '${:,.0f}'.format(self.nomina.valor).replace(',', '.')
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usuario/models.py b/usuario/models.py
--- a/usuario/models.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/usuario/models.py	(date 1685999812087)
@@ -37,7 +37,6 @@
         verbose_name_plural="Persona"
 #Modelo de Contabilidad
 class Contabilidad(models.Model):
-
     class TipoI(models.TextChoices):
         INGRESO='1',_("Ingreso")
         EGRESO='0',_("Egreso")
@@ -95,4 +94,4 @@
     nomina=models.ForeignKey(Nomina, verbose_name=_("Valor a Pagar"),help_text="Valor que se le paga al trabajador", on_delete=models.CASCADE)
     ips=models.ForeignKey(Ips, verbose_name=_("Prestador de salud"),help_text="Seleccione una IPS", on_delete=models.CASCADE)
     def formato_colombiano(self):
-        return '${:,.0f}'.format(self.nomina.valor).replace(',', '.')
\ No newline at end of file
+        return '${:,.0f}'.format(self.nomina.valor).replace(',', '.')
Index: venta/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\nfrom django.utils.translation import gettext_lazy as _\r\nfrom django.core.validators import integer_validator,MaxLengthValidator\r\nfrom usuario.models import Persona\r\n#Módulo de venta\r\n# Create your models here.\r\n#Modelo de Venta\r\nclass Venta(models.Model):\r\n    fecha=models.DateTimeField(verbose_name=\"Fecha\",auto_now_add=True)\r\n    valor_total=models.DecimalField(max_digits=6,decimal_places=2,verbose_name=\"Valor total\" ,default=0)\r\n    class Estado(models.TextChoices):\r\n        ACTIVO='1',_(\"Activo\")\r\n        INACTICO='0',_(\"Inactivo\")\r\n    estado=models.CharField(max_length=1,choices=Estado.choices,default=Estado.ACTIVO,verbose_name=\"Estado\")\r\n    persona=models.ForeignKey(Persona, verbose_name=_(\"Persona\"), on_delete=models.CASCADE)\r\n\r\n    def __str__(self):\r\n        return\"%s %s\"%(self.valor_total,self.fecha)\r\n    class meta:\r\n        verbose_name_plural=\"Venta\"\r\n\r\n#Modelo de Detalle Venta\r\nclass Detalle_Venta(models.Model):\r\n    precio_unitario=models.DecimalField(max_digits=6, decimal_places=2,verbose_name=\"Precio Unitario\" ,default=0)\r\n    cantidad_total = models.PositiveIntegerField(verbose_name=\"Cantidad Total\",default=1)\r\n    venta=models.ForeignKey(Venta, verbose_name=_(\"Venta\"), on_delete=models.CASCADE)\r\n\r\n    def __str__(self):\r\n        return\"%s %s %s\"%(self.cantidad_total,self.precio_unitario,self.venta)\r\n    class meta:\r\n        verbose_name_plural=\"Detalle Venta\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venta/models.py b/venta/models.py
--- a/venta/models.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/venta/models.py	(date 1685999812092)
@@ -28,4 +28,4 @@
     def __str__(self):
         return"%s %s %s"%(self.cantidad_total,self.precio_unitario,self.venta)
     class meta:
-        verbose_name_plural="Detalle Venta"
\ No newline at end of file
+        verbose_name_plural="Detalle Venta"
Index: usuario/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render,redirect\r\nfrom django.contrib import messages\r\nfrom django.contrib.auth.decorators import login_required\r\nfrom usuario.forms import PersonaForm,PersonaUptadeForm\r\nfrom usuario.forms import ContabilidadForm,ContabilidadUptadeForm\r\nfrom usuario.forms import AporteForm,AporteUptadeForm\r\nfrom usuario.forms import IpsForm,IpsUptadeForm\r\nfrom usuario.forms import NominaForm,NominaUptadeForm\r\nfrom usuario.forms import TrabajadorForm, TrabajadorUptadeForm\r\nfrom usuario.models import Persona,Contabilidad,Aporte,Ips,Nomina,Trabajador\r\n\r\n#CRUD PERSONA\r\n##@login_required\r\ndef persona_crear(request):\r\n    titulo=\"Persona\"\r\n    if request.method == 'POST':\r\n        form=PersonaForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            messages.success(request,'Se ha creado correctamente.')\r\n            return redirect('personas')\r\n        else:\r\n            messages.error(request,'¡Oops! Parece que ha ocurrido un error en el formulario. Te pedimos que revises los campos resaltados y realices las correcciones necesarias.')\r\n    else:\r\n        form=PersonaForm()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render(request,\"persona/crear.html\",context)\r\n\r\n##@login_required\r\ndef persona_listar(request):\r\n    titulo=\"persona\"\r\n    modulo=\"usuarios\"\r\n    personas=Persona.objects.all()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"modulo\":modulo,\r\n        \"personas\":personas,\r\n\r\n    }\r\n    return render(request,\"persona/listar.html\",context)\r\n\r\n##@login_required\r\ndef persona_modificar(request,pk):\r\n    titulo=\"Persona\"\r\n    persona=Persona.objects.get(id=pk)\r\n    if request.method=='POST':\r\n        form=PersonaUptadeForm(request.POST,instance=persona)\r\n        if form.is_valid():\r\n            form.save()\r\n            messages.info(request,'El registro ha sido actualizado correctamente')\r\n            return redirect('personas')\r\n    else:\r\n        form=PersonaUptadeForm(instance=persona)\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render (request,\"persona/modificar.html\",context)\r\n\r\n##@login_required\r\ndef persona_eliminar(request,pk):\r\n    persona=Persona.objects.filter(id=pk)\r\n    persona.update(\r\n        estado=\"0\"\r\n    )\r\n    return redirect('personas')\r\n\r\n#CRUD Contabilidad\r\n##@login_required\r\ndef contabilidad_crear(request):\r\n    titulo=\"contabilidad\"\r\n    if request.method == 'POST':\r\n        form=ContabilidadForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            messages.success(request,'se creado exitosamente')\r\n            return redirect('contabilidades')\r\n        else:\r\n             messages.error(request,'¡Oops! Parece que ha ocurrido un error en el formulario. Te pedimos que revises los campos resaltados y realices las correcciones necesarias.')\r\n    else:\r\n        form=ContabilidadForm()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render(request,\"contabilidad/crear.html\",context)\r\n\r\n##@login_required\r\ndef contabilidad_listar(request):\r\n    titulo=\"contabilidad\"\r\n    modulo=\"usuarios\"\r\n    Contabilidades=Contabilidad.objects.all()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"contabilidades\":Contabilidades,\r\n        \"modulo\":modulo,\r\n\r\n    }\r\n    return render(request,\"contabilidad/listar.html\",context)\r\n\r\n##@login_required\r\ndef contabilidad_modificar(request,pk):\r\n    titulo=\"contabilidad\"\r\n    contabilidad=Contabilidad.objects.get(id=pk)\r\n    if request.method=='POST':\r\n        form=ContabilidadUptadeForm(request.POST,instance=contabilidad)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('contabilidades')\r\n    else:\r\n        form=ContabilidadUptadeForm(instance=contabilidad)\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render (request,\"contabilidad/modificar.html\",context)\r\n\r\n##@login_required\r\ndef contabilidad_eliminar(request,pk):\r\n    contabiliadad=Contabilidad.objects.filter(id=pk)\r\n    contabiliadad.update(\r\n        estado=\"0\"\r\n    )\r\n    return redirect('contabilidades')\r\n\r\n#CRUD Aporte\r\n##@login_required\r\ndef aporte_crear(request):\r\n    titulo=\"Aporte\"\r\n    if request.method == 'POST':\r\n        form=AporteForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            messages.success(request,'se creado exitosamente')\r\n            return redirect('aportes')\r\n        else:\r\n             messages.error(request,'¡Oops! Parece que ha ocurrido un error en el formulario. Te pedimos que revises los campos resaltados y realices las correcciones necesarias.')\r\n    else:\r\n        form=AporteForm()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render(request,\"aporte/crear.html\",context)\r\n\r\n##@login_required\r\ndef aporte_listar(request):\r\n    titulo=\"Aporte\"\r\n    modulo=\"usuarios\"\r\n    aportes=Aporte.objects.all()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"modulo\":modulo,\r\n        \"aportes\":aportes,\r\n        \r\n    }\r\n    return render(request,\"aporte/listar.html\",context)\r\n\r\n##@login_required\r\ndef aporte_modificar(request,pk):\r\n    titulo=\"Aporte\"\r\n    aporte=Aporte.objects.get(id=pk)\r\n    if request.method=='POST':\r\n        form=AporteUptadeForm(request.POST,instance=aporte)\r\n        if form.is_valid():\r\n            form.save()\r\n        return redirect('aportes')\r\n    else:\r\n        form=AporteUptadeForm(instance=aporte)\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render (request,\"aporte/modificar.html\",context)\r\n\r\n##@login_required\r\ndef aporte_eliminar(request,pk):\r\n    aporte=Aporte.objects.filter(id=pk)\r\n    aporte.update(\r\n        estado=\"0\"\r\n    )\r\n    return redirect('aportes')\r\n\r\n#CRUD Ips\r\n##@login_required\r\ndef ips_crear(request):\r\n    titulo=\"Ips\"\r\n    if request.method == 'POST':\r\n        form=IpsForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            messages.success(request,'se creado exitosamente')\r\n            return redirect('ipss')\r\n        else:\r\n            messages.error(request,'¡Oops! Parece que ha ocurrido un error en el formulario. Te pedimos que revises los campos resaltados y realices las correcciones necesarias.')\r\n    else:\r\n        form=IpsForm()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render(request,\"ips/crear.html\",context)\r\n\r\n##@login_required\r\ndef ips_listar(request):\r\n    titulo=\"Ips\"\r\n    modulo=\"usuario\"\r\n    ipss=Ips.objects.all()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"ipss\":ipss,\r\n        \"modulo\":modulo,\r\n    }\r\n    return render(request,\"ips/listar.html\",context)\r\n\r\n##@login_required\r\ndef ips_modificar(request,pk):\r\n    titulo=\"Ips\"\r\n    ips=Ips.objects.get(id=pk)\r\n    if request.method=='POST':\r\n        form=IpsUptadeForm(request.POST,instance=ips)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('ipss')\r\n    else:\r\n        form=IpsUptadeForm(instance=ips)\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render (request,\"ips/modificar.html\",context)\r\n\r\n##@login_required\r\ndef ips_eliminar(request,pk):\r\n    ips=Ips.objects.filter(id=pk)\r\n    ips.update(\r\n        estado=\"0\"\r\n    )\r\n    return redirect('ipss')\r\n\r\n#CRUD Nomina\r\n##@login_required\r\ndef nomina_crear(request):\r\n    titulo=\"Nomina\"\r\n    if request.method == 'POST':\r\n        form=NominaForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            messages.success(request,'se creado exitosamente')\r\n            return redirect('nominas')\r\n        else:\r\n            messages.error(request,'¡Oops! Parece que ha ocurrido un error en el formulario. Te pedimos que revises los campos resaltados y realices las correcciones necesarias.')\r\n    else:\r\n        form=NominaForm()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render(request,\"nomina/crear.html\",context)\r\n\r\n##@login_required\r\ndef nomina_listar(request):\r\n    titulo=\"Nomina\"\r\n    modulo=\"usuarios\"\r\n    nominas=Nomina.objects.all()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"modulo\":modulo,\r\n        \"nominas\":nominas,\r\n    }\r\n    return render(request,\"nomina/listar.html\",context)\r\n\r\n##@login_required\r\ndef nomina_modificar(request,pk):\r\n    titulo=\"Nomina\"\r\n    nomina=Nomina.objects.get(id=pk)\r\n    if request.method=='POST':\r\n        form=NominaUptadeForm(request.POST,instance=nomina)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('nominas')\r\n    else:\r\n        form=NominaUptadeForm(instance=nomina)\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render (request,\"nomina/modificar.html\",context)\r\n\r\n##@login_required\r\ndef nomina_eliminar(request,pk):\r\n    nomina=Nomina.objects.filter(id=pk)\r\n    nomina.update(\r\n        estado=\"0\"\r\n    )\r\n    return redirect('nominas')\r\n\r\n#CRUD Trabajador\r\n##@login_required\r\ndef trabajador_crear(request):\r\n    titulo=\"Trabajador\"\r\n    if request.method == 'POST':\r\n        form=TrabajadorForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            messages.success(request,'se creado exitosamente')\r\n            return redirect('trabajadores')\r\n        else:\r\n            messages.error(request,'¡Oops! Parece que ha ocurrido un error en el formulario. Te pedimos que revises los campos resaltados y realices las correcciones necesarias.')\r\n    else:\r\n        form=TrabajadorForm()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render(request,\"trabajador/crear.html\",context)\r\n\r\n##@login_required\r\ndef trabajador_listar(request):\r\n    titulo=\"trabajador\"\r\n    modulo=\"usuarios\"\r\n    trabajadores=Trabajador.objects.all()\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"modulo\":modulo,\r\n        \"trabajadores\":trabajadores,\r\n\r\n    }\r\n    return render(request,\"trabajador/listar.html\",context)\r\n\r\n##@login_required\r\ndef trabajador_modificar(request,pk):\r\n    titulo=\"Trabajador\"\r\n    trabajador=Trabajador.objects.get(id=pk)\r\n    if request.method=='POST':\r\n        form=TrabajadorUptadeForm(request.POST,instance=trabajador)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('trabajadores')\r\n    else:\r\n        form=TrabajadorUptadeForm(instance=trabajador)\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"form\":form\r\n    }\r\n    return render (request,\"trabajador/modificar.html\",context)\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usuario/views.py b/usuario/views.py
--- a/usuario/views.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/usuario/views.py	(date 1685999812088)
@@ -346,6 +346,4 @@
         "titulo":titulo,
         "form":form
     }
-    return render (request,"trabajador/modificar.html",context)
-
-
+    return render (request,"trabajador/modificar.html",context)
\ No newline at end of file
Index: base/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render,redirect\r\nfrom django.contrib.auth.decorators import login_required\r\nfrom django.contrib.auth import logout\r\nfrom compra.models import Compra,Detalle_Compra\r\nfrom venta.models import Venta,Detalle_Venta\r\nfrom inventario.models import Materia_Prima,Stock_Materia_Prima,Detalle_Producto,Stock_Producto\r\nfrom productos.models import Tipo,Tamaño,Producto\r\nfrom usuario.models import Persona,Trabajador,Aporte,Contabilidad,Ips,Nomina\r\n#@login_required\r\ndef principal(request):\r\n    titulo=\"Bienvenido\"\r\n    compras= Compra.objects.all().count\r\n    detalle_compras=Detalle_Compra.objects.all().count()\r\n    ventas=Venta.objects.all().count()\r\n    detalle_ventas=Detalle_Venta.objects.all().count()\r\n    materias_primas=Materia_Prima.objects.all().count()\r\n    stock_materias_primas=Stock_Materia_Prima.objects.all().count()\r\n    detalle_productos=Detalle_Producto.objects.all().count()\r\n    stock_productos=Stock_Producto.objects.all().count()\r\n    tipos=Tipo.objects.all().count()\r\n    tamaños=Tamaño.objects.all().count()\r\n    productos=Producto.objects.all().count()\r\n    personas=Persona.objects.all().count()\r\n    trabajadores=Trabajador.objects.all().count()\r\n    aportes=Aporte.objects.all().count()\r\n    contabilidades=Contabilidad.objects.all().count()\r\n    ipss=Ips.objects.all().count()\r\n    nominas=Nomina.objects.all().count()\r\n\r\n    context={\r\n        \"titulo\":titulo,\r\n        \"compras\":compras,\r\n        \"detalle_compras\":detalle_compras,\r\n        \"ventas\":ventas,\r\n        \"detalle_ventas\":detalle_ventas,\r\n        \"materias_primas\":materias_primas,\r\n        \"stock_materias_primas\":stock_materias_primas,\r\n        \"detalle_productos\":detalle_productos,\r\n        \"stock_productos\":stock_productos,\r\n        \"tipos\":tipos,\r\n        \"tamaños\":tamaños,\r\n        \"productos\":productos,\r\n        \"personas\":personas,\r\n        \"trabajadores\":trabajadores,\r\n        \"aportes\":aportes,\r\n        \"contabilidades\":contabilidades,\r\n        \"ipss\":ipss,\r\n        \"nominas\":nominas\r\n    }\r\n    return render(request,\"index.html\",context)\r\n\r\ndef logout_user(request):\r\n    logout(request)\r\n    return redirect('inicio')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/base/views.py b/base/views.py
--- a/base/views.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/base/views.py	(date 1685999811979)
@@ -51,4 +51,4 @@
 
 def logout_user(request):
     logout(request)
-    return redirect('inicio')
+    return redirect('inicio')
\ No newline at end of file
Index: venta/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by Django 4.2 on 2023-06-01 21:33\r\n\r\nfrom django.db import migrations, models\r\nimport django.db.models.deletion\r\n\r\n\r\nclass Migration(migrations.Migration):\r\n\r\n    initial = True\r\n\r\n    dependencies = [\r\n        ('usuario', '0001_initial'),\r\n    ]\r\n\r\n    operations = [\r\n        migrations.CreateModel(\r\n            name='Venta',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),\r\n                ('valor_total', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Valor total')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuario.persona', verbose_name='Persona')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Detalle_Venta',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('precio_unitario', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Precio Unitario')),\r\n                ('cantidad_total', models.PositiveIntegerField(default=1, verbose_name='Cantidad Total')),\r\n                ('venta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venta.venta', verbose_name='Venta')),\r\n            ],\r\n        ),\r\n    ]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venta/migrations/0001_initial.py b/venta/migrations/0001_initial.py
--- a/venta/migrations/0001_initial.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/venta/migrations/0001_initial.py	(date 1685992163786)
@@ -1,4 +1,4 @@
-# Generated by Django 4.2 on 2023-06-01 21:33
+# Generated by Django 4.1.7 on 2023-06-05 19:09
 
 from django.db import migrations, models
 import django.db.models.deletion
Index: usuario/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by Django 4.2 on 2023-06-01 21:33\r\n\r\nimport django.core.validators\r\nfrom django.db import migrations, models\r\nimport django.db.models.deletion\r\nimport re\r\n\r\n\r\nclass Migration(migrations.Migration):\r\n\r\n    initial = True\r\n\r\n    dependencies = [\r\n    ]\r\n\r\n    operations = [\r\n        migrations.CreateModel(\r\n            name='Contabilidad',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('tipo', models.CharField(choices=[('1', 'Ingreso'), ('0', 'Egreso')], default='1', max_length=1, verbose_name='Ingreso o Egreso')),\r\n                ('valor', models.DecimalField(decimal_places=2, max_digits=25, verbose_name='Valor')),\r\n                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Pago')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Ips',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('nombre_ips', models.CharField(max_length=20, verbose_name='Nombre')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Nomina',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('valor', models.DecimalField(decimal_places=2, max_digits=25, verbose_name='Valor a Pagar')),\r\n                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Persona',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('tipo_documento', models.CharField(choices=[('CC ', 'Cédula de Ciudadanía'), ('TI', 'Tarjeta de Identidad'), ('CE', 'Cédula de Extranjería')], default='CC ', max_length=3, verbose_name='Tipo de Documento')),\r\n                ('numero_documento', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\\\d+\\\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Número de Documento')),\r\n                ('primer_nombre', models.CharField(max_length=10, verbose_name='Primer Nombre')),\r\n                ('segundo_nombre', models.CharField(max_length=10, verbose_name='Segundo Nombre')),\r\n                ('primer_apellido', models.CharField(max_length=10, verbose_name='Primer Apellido')),\r\n                ('segundo_apellido', models.CharField(max_length=10, verbose_name='Segundo Apellido')),\r\n                ('telefono', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(re.compile('^-?\\\\d+\\\\Z'), code='invalid', message='Enter a valid integer.'), django.core.validators.MaxLengthValidator(10)], verbose_name='Número Telefónico')),\r\n                ('rol', models.CharField(choices=[('ADMI', 'Administrador'), ('VEN', 'Vendedor'), ('PROV', 'Proveedor'), ('CLIE', 'Cliente')], help_text='Roles:Administrador,Vendedor,Proveedor,Cliente', max_length=4)),\r\n                ('correo_electronico', models.EmailField(max_length=50, verbose_name='Correo Electrónico')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Trabajador',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('ips', models.ForeignKey(help_text='Seleccione una IPS', on_delete=django.db.models.deletion.CASCADE, to='usuario.ips', verbose_name='Prestador de salud')),\r\n                ('nomina', models.ForeignKey(help_text='Valor que se le paga al trabajador', on_delete=django.db.models.deletion.CASCADE, to='usuario.nomina', verbose_name='Valor a Pagar')),\r\n                ('persona', models.ForeignKey(help_text='Recuerde que solo las personas con rol de vendedor se mostraran en los trabajadores', on_delete=django.db.models.deletion.CASCADE, to='usuario.persona', verbose_name='Seleccione al Trabajador')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Aporte',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('valor', models.DecimalField(decimal_places=2, max_digits=25, verbose_name='Valor del Aporte')),\r\n                ('fecha', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuario.persona', verbose_name='Persona')),\r\n            ],\r\n        ),\r\n    ]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usuario/migrations/0001_initial.py b/usuario/migrations/0001_initial.py
--- a/usuario/migrations/0001_initial.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/usuario/migrations/0001_initial.py	(date 1685992163784)
@@ -1,4 +1,4 @@
-# Generated by Django 4.2 on 2023-06-01 21:33
+# Generated by Django 4.1.7 on 2023-06-05 19:09
 
 import django.core.validators
 from django.db import migrations, models
Index: productos/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by Django 4.2 on 2023-06-01 21:33\r\n\r\nimport django.core.validators\r\nfrom django.db import migrations, models\r\nimport django.db.models.deletion\r\n\r\n\r\nclass Migration(migrations.Migration):\r\n\r\n    initial = True\r\n\r\n    dependencies = [\r\n    ]\r\n\r\n    operations = [\r\n        migrations.CreateModel(\r\n            name='Tamaño',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('nombre', models.CharField(max_length=30, verbose_name='Tamaño')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Tipo',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('nombre', models.CharField(max_length=30, verbose_name='Tipo')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Producto',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('nombre', models.CharField(max_length=45, verbose_name='Nombre')),\r\n                ('precio_unitario', models.DecimalField(decimal_places=0, max_digits=10, validators=[django.core.validators.MaxValueValidator(9999999999)])),\r\n                ('cantidad', models.PositiveIntegerField(default=1, help_text='La cantidad tiene que ser menor a 100', validators=[django.core.validators.MaxValueValidator(100)])),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n                ('tamano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productos.tamaño', verbose_name='Tamaño')),\r\n                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productos.tipo', verbose_name='Tipo')),\r\n            ],\r\n        ),\r\n    ]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/productos/migrations/0001_initial.py b/productos/migrations/0001_initial.py
--- a/productos/migrations/0001_initial.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/productos/migrations/0001_initial.py	(date 1685992163780)
@@ -1,4 +1,4 @@
-# Generated by Django 4.2 on 2023-06-01 21:33
+# Generated by Django 4.1.7 on 2023-06-05 19:09
 
 import django.core.validators
 from django.db import migrations, models
Index: inventario/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by Django 4.2 on 2023-06-01 21:33\r\n\r\nfrom django.db import migrations, models\r\nimport django.db.models.deletion\r\n\r\n\r\nclass Migration(migrations.Migration):\r\n\r\n    initial = True\r\n\r\n    dependencies = [\r\n        ('venta', '0001_initial'),\r\n        ('productos', '0001_initial'),\r\n    ]\r\n\r\n    operations = [\r\n        migrations.CreateModel(\r\n            name='Detalle_Producto',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productos.producto', verbose_name='Productos')),\r\n            ],\r\n            options={\r\n                'verbose_name_plural': 'Detalle Producto',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Materia_Prima',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('nombre', models.CharField(help_text='Ingrese el Nombre de la Materia Prima', max_length=20, verbose_name='Nombre de la Materia Prima')),\r\n                ('tipo', models.CharField(max_length=20, verbose_name='Tipo de Materia Prima')),\r\n                ('color', models.CharField(max_length=20, verbose_name='Color Materia Prima')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n            ],\r\n            options={\r\n                'verbose_name_plural': 'Materia Prima',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Stock_Producto',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('cantidad', models.IntegerField(verbose_name='Cantidad Total')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n                ('detalle_producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.detalle_producto', verbose_name='Detalle Producto')),\r\n                ('detalle_venta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='venta.detalle_venta', verbose_name='Detalle venta')),\r\n            ],\r\n            options={\r\n                'verbose_name_plural': 'Stock Producto',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Stock_Materia_Prima',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('cantidad', models.IntegerField(verbose_name='Cantidad de materia prima en stock')),\r\n                ('estado', models.CharField(choices=[('1', 'Activo'), ('0', 'Inactivo')], default='1', max_length=1, verbose_name='Estado')),\r\n                ('materia_prima', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.materia_prima', verbose_name='Materia Prima')),\r\n            ],\r\n            options={\r\n                'verbose_name_plural': 'Stock Materia Prima',\r\n            },\r\n        ),\r\n        migrations.AddField(\r\n            model_name='detalle_producto',\r\n            name='stock_materia_prima',\r\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.stock_materia_prima', verbose_name='Stock Materia Prima'),\r\n        ),\r\n    ]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inventario/migrations/0001_initial.py b/inventario/migrations/0001_initial.py
--- a/inventario/migrations/0001_initial.py	(revision 6b524b0c665037d9f1ed7a90deedf85de1c58584)
+++ b/inventario/migrations/0001_initial.py	(date 1685992163789)
@@ -1,4 +1,4 @@
-# Generated by Django 4.2 on 2023-06-01 21:33
+# Generated by Django 4.1.7 on 2023-06-05 19:09
 
 from django.db import migrations, models
 import django.db.models.deletion
diff --git a/compra/migrations/__init__.py b/compra/migrations/__init__.py
deleted file mode 100644
